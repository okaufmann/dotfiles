#!/usr/bin/env bash

# set -ex

# Load Homebrew (M1)
eval "$($(brew --prefix)/bin/brew shellenv)"

# dont update all other packages when installing a new brew package
# https://github.com/Homebrew/brew/blob/7d31a70373edae4d8e78d91a4cbc05324bebc3ba/Library/Homebrew/manpages/brew.1.md.erb#L202
export HOMEBREW_NO_AUTO_UPDATE=1

# Make vim the default editor
export EDITOR="vim"

# Highlight section titles in manual pages
export LESS_TERMCAP_md="$ORANGE"

# Unset manpath so we can inherit from /etc/manpath via the `manpath`
# command
unset MANPATH # delete if you already modified MANPATH elsewhere in your config
MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
# Donâ€™t clear the screen after quitting a manual page
export MANPAGER="less -X"

# Spaceship theme
source "$(brew --prefix)/opt/spaceship/spaceship.zsh"

# zsh autosuggestions
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# FZF

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# --- setup fzf theme ---
fg="#CBE0F0"
bg="#011628"
bg_highlight="#143652"
purple="#B388FF"
blue="#06BCE4"
cyan="#2CF9ED"

export FZF_DEFAULT_OPTS="--color=fg:${fg},bg:${bg},hl:${purple},fg+:${fg},bg+:${bg_highlight},hl+:${purple},info:${blue},prompt:${cyan},pointer:${cyan},marker:${cyan},spinner:${cyan},header:${cyan}"

export FZF_DEFAULT_OPTS="--info=inline
  --layout=reverse
  --bind='ctrl-o:execute(code {})+abort'
  --color=fg:${fg},bg:${bg},hl:${purple},fg+:${fg},bg+:${bg_highlight},hl+:${purple},info:${blue},prompt:${cyan},pointer:${cyan},marker:${cyan},spinner:${cyan},header:${cyan}"

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

# not yet installed
# source ~/fzf-git.sh/fzf-git.sh

export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "bat -n --color=always --line-range :500 {}" "$@" ;;
  esac
}

# zoxide
eval "$(zoxide init zsh --cmd cd)"

# Composer and PHP
export PATH="$HOME/bin:/usr/local/bin:$HOME/.config/composer/vendor/bin:$PATH"
export PATH="~/.config/phpmon/bin:$PATH"
export COMPOSER_MEMORY_LIMIT=-1
export PHP_CS_FIXER_IGNORE_ENV=true

# Tools
export PATH="/Users/${USER}/Code/private/tools/_bin:$PATH"

# Go
export GOPATH=$HOME/Code/go-workspace
# export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH="/usr/local/sbin:$PATH"

# Prefer US English and use UTF-8
export LANG="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
# export LC_ALL="en_US.UTF-8"
export LC_CTYPE=en_US.utf-8 # fix Setting locale failed error

# Use 1Passport as ssh agent
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock

# krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# include custom scripts
export PATH="$PATH:$DOTFILES/shell/.scripts"

# NPM
export  NPM_PACKAGES="${HOME}/.npm-packages" # Sudoless npm https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md
export  PATH="$NPM_PACKAGES/bin:$PATH"

# yarn binaries
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# import nvm global bin folder for CLI tools
currentNvm=$(nvm which current)
export PATH="$(dirname $currentNvm):$PATH"
unset currentNvm

# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

# ensure `nvm use` is run when changing directories
add-zsh-hook chpwd load-nvmrc
# load-nvmrc

# pnpm
export PNPM_HOME=~/Library/pnpm
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# eval "$(gh copilot alias -- bash)"

eval $(thefuck --alias)

export KUBE_EDITOR='code --wait'
export TALOS_EDITOR='code --wait'

# this is needed as the 1Password ssh agent is readonly
export TELEPORT_USE_LOCAL_SSH_AGENT=false

export BAT_THEME="Coldark-Dark"

# set config path for lazygit
export XDG_CONFIG_HOME="$HOME/.config"

[ -f ~/.iterm2_shell_integration.zsh ] && source ~/.iterm2_shell_integration.zsh
