[core]
    autocrlf = false
    eol = native
    editor = code --wait
    pager = delta

[include]
    path = ~/.git-config/.gitconfig-private

[includeIf "gitdir:~/Code/work/"]
    path = ~/.git-config/.gitconfig-work

[gpg]
    format = ssh

[gpg "ssh"]
    allowedSignersFile = ~/.ssh/allowed_signers
    program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[commit]
    gpgsign = true

[tag]
    forceSignAnnotated = true
    gpgsign = true

[push]
    default = simple

[init]
    defaultBranch = main

[pull]
    # https://sdqweb.ipd.kit.edu/wiki/Git_pull_--rebase_vs._--merge
    rebase = true

[fetch]
    prune = true

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    line-numbers = true
    features = crazy-cats

[delta "crazy-cats"]
    syntax-theme = Coldark-Dark
    dark = true

[merge]
    conflictstyle = diff3
    ff = false

[diff]
    colorMoved = default

[diff "sopsdiffer"]
    textconv = sops -d --config /dev/null

[column]
    ui = auto

[branch]
    sort = -committerdate

# REuse REcorded REsolution helps to resolve conflicts by reusing recorded resolutions
[rerere]
    enabled = true

[alias]
    # inspired by https://laravel-news.com/bash-aliases
    st = "!f(){ git status -bs; printf \"\nIgnored files:\n\"; git ls-files -v | grep "^h " | cut -c 3-; };f"
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
    ; st = status -bs
    ci = commit
    co = checkout
    di = diff
    dc = diff --cached
    sg = diff --staged --name-only
    b = branch
    bb = !better-branch.sh
    fa = fetch --all
    lg = log --pretty=format:\"%Cgreen%h%Creset %Cblue%ad%Creset %s%C(yellow)%d%Creset %Cblue[%an]%Creset\" --graph --date=short
    ll = log --pretty=format:\"%Cgreen%h%Creset %Cblue%ad%Creset %s%C(yellow)%d%Creset %Cblue[%an]%Creset\" --graph --date=short -10
    amend = commit --amend
    dracarys = "!f() { git reset --hard && git clean -df; }; f"
    au = add -u
    ap = add -p
    cara = "!git commit --amend --reset-author"
    deploy = "!f() { git commit --allow-empty -m \"ci: deploy\" && git push; }; f"
    uncommit = reset --soft HEAD~1
    fetchb =  "!f() { git fetch ${2:-origin} ${1:-main}:${1:-main}; }; f"
